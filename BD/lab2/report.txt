
    1. Какие каскадные операции необходимы в этой базе данных? Опишите их.
Если закрылся аэропорт нужна либо установка null airport_id у рейсов либо запрет каскадных операций
Если пользователь отменил бронь, треюуется произвести каскадное удаление 
Если удаляется перелёт(ticket flight), тогда удалеятся посадочный талон 

    2. Существует ли возможность аномалий операций вставки, обновления, удаления данных? Составьте список таких случаев и внесите в базу данных исправления, позволяющие избежать таких аномалий.
Нашёл немного:
Может получится так, что продано больше мест определённого класса, чем их есть в самолёте(надо добавить триггер) (перенести из airplanes в forwarding(вылеты))

    3. Можно ли использовать схемы «звезда» или «снежинка» с этой базой данных, чтобы избежать 	некоторых аномалий операций с данными? Переработайте схему, сравните новую с исходной и составьте список аномалий работы с данными, которые были устранены (или, наоборот, появились).
Схема звезда однозначно не подходит, так как в данной схеме не представляется возможным однозначно выделить главное отношение
Схема снежинка также не подходит:
	1)Невозожно выделить центр(смотреть первый ответ этого вопроса)
	2) Есть "циклы", чего ни в одной схеме снежинка Ваш покорный не видел.

    4. Составьте список всех функциональных зависимостей в базе данных.

Функциональная зависимость означает, что по значению одного столбца можно всегда однозначно определить соответствующее значение другого столбца. (То же самое действительно и для групп столбцов.)
Какие зависимости:
	1) очевидно: во всех отношениях, где есть PK(id) можно определить все значения остальных ключей.
	2) зная время вылета, id аэропорта вылета и id аэропорта прилёта однозначно определяется время прилёта(в расписании у рейса)
	
    5. Существуют ли отношения, имеющие многозначные зависимости? Если «да», как можно переработать схему, чтобы избежать таких зависимостей?

многозначная зависимость обязывает отношение, содержащее два кортежа, совпадающие по значению одного из трёх атрибу-тов, содержать также два дополнительных кортежа, «перекрёстно»
содержащие комбинации оставшихся двух атрибутов
	не нашёл.
    6. Нарушает ли схема какие-либо «требования нормализации»? Если «да», доработайте схему, чтобы избежать таких нарушений.

	ТРЕБОВАНИЯ НОРМАЛИЗАЦИИ:
	1)Сохранить ограничения предметной области
	2)
		адекватность
		удобство проектирования
		защищенность
		производительность(могут быть проблемы с каскадными операциями)
	3)связанные с первичн ключом
		нужен ли он
		не слишком ли он мал/большой
	4)неизбыточность
	5)консистентность
	6)гибкость
		naming_convention
		comments in code
		documentaion
		логически оправданный подход 
		актуальность
*ищут обычно передёты между городами, а не аэропортами

    7. Существуют ли какие-либо потенциальные проблемы с производительностью базы данных? Если «да», запишите их.
	смотреть вопрос 6
    8. Для каждого отношения в базе данных определите, в какой нормальной форме оно находится. Запишите ответ.

	НУ НЕЕЕЕЕЕЕЕЕЕТ(ОТРИЦАНИЕ)
	ДА НУ НАХРЕН, Я ЩА СДОХНУ ПОСЛЕ 9ТИ ЧАСОВ РАБОТЫ ЭТО ДЕЛАТЬ(ГНЕВ)
	НО ЭТО НУЖНО СДЕЛАТЬ(ОСОЗНАНИЕ)
	ОПЯТЬ БАТРАЧИТЬ...(ПРИНЯТИЕ) 
И ТАК:

кажется нужно сделать защиту от дебила, не умеющего красиво имплементить БД
например, если случилось так, что несколько талонов выдали на одно и то же место
надо сделать уникальным сочетание перелёт/место

лучик надежды: открыть файл по нормальным формам в этой директории: normal_forms.html

Я ВЫДОХСЯ, БУДЬ, ЧТО БУДЕТ....
В КОНЕЧНОМ СЧЁТЕ НИЧТО НЕ ИМЕЕТ СМЫСЛА
